
#source('R/packages.R')
## tokenizations 

music_sim <- read_delim(
  "data-raw/music.csv",
  escape_double = FALSE,
  trim_ws = TRUE)

set.seed(1234)# reproductibility 


sampled_unique_rows <- music_sim[!duplicated(music_sim$artist_name), ]
sampled_rows <- sampled_unique_rows[sample(nrow(sampled_unique_rows)), ]
shuffuled_music3 <- sampled_rows[1:100,]

!shuffuled_music3$artist_name %in% shuffuled_music3$artist_name[duplicated(shuffuled_music3$artist_name )]

crude.cp <- corpus(shuffuled_music3$lyrics)

crude.tk <- tokens(
  crude.cp,
  remove_numbers = TRUE,
  remove_punct = TRUE,
  remove_symbols = TRUE, 
  remove_separators=TRUE)

crude.tk <- crude.tk %>% 
  tokens_tolower() %>% 
  tokens_remove(stop_words$word) 

crude.tk <- tokens_replace(
  crude.tk,
  pattern = hash_lemmas$token,
  replacement = hash_lemmas$lemma)


### GLOVE MODEL

fcm <- fcm(crude.tk, 
           context = "window",
           count = "weighted",
           window= 10, # mean result of lyrics set
           weights = 1/(1:10), # custom 
           tri = FALSE)

glove <- GlobalVectors$new(rank = 50, x_max = 10) # model 

word_vectors_main <- glove$fit_transform(fcm, n_iter = 100) # a changer !
word_vectors_context <- glove$components
twitter.glove <- word_vectors_main + t(word_vectors_context)

## RWMD algo to computes distances
dtm<-dfm(crude.tk)
speech.rwmd.mode<-RelaxedWordMoversDistance$new(dtm,twitter.glove)
speech.rwms <- speech.rwmd.mode$sim2(dtm)
speech.rwmd <- speech.rwmd.mode$dist2(dtm) ## distances obtained 

#######


myfunct2 <- function(){ ## function that returns 2 lists : artist_name and track_name
  mylist <- c()
  mylist_w<-c()
  l <- shuffuled_music3$artist_name
  w <-  shuffuled_music3$track_name
  
  for (i in 1:length(l)){
    mylist<-append(mylist,l[i])
  }
  for(i in 1:length(w)){
    mylist_w<-append(mylist_w,w[i])
  }
  
  mylist <<- mylist
  mylist_w <<-mylist_w
  
} # get name lists
myfunct2()


row.names(speech.rwmd) <- mylist
colnames(speech.rwmd)<-mylist

#### network part 


X1 <- c('low','sandra','bobby vee','bobby vee','bobby vee','pat travers','pat travers','pat travers','pat travers',
        'timothy b. schmit','timothy b. schmit','timothy b. schmit','timothy b. schmit','timothy b. schmit',
        'timothy b. schmit','timothy b. schmit','timothy b. schmit','timothy b. schmit','timothy b. schmit',
        'timothy b. schmit','the dave clark five','the dave clark five','the dave clark five',
        'the dave clark five','the dave clark five','the dave clark five','the dave clark five',
        'the dave clark five','the dave clark five','the dave clark five','joe liggins','joe liggins',
        'joe liggins','joe liggins','julian marley','the dubs')



X2 <- c('the sundays','rex smith','lebrado','floetry','pat travers','granger smith','nada surf','julian marley',
        'timothy b. schmit','the dubs','nick lowe','steely dan','delicatessen','alien ant farm','camila cabello',
        'solange','the fortunes','a r i z o n a','elkie brooks','pat travers','brick & lace','nada surf',
        'phil perry','wax tailor','joe liggins','pennywise','nick lowe','delicatessen','nick lowe','the dubs',
        'incognito','walter trout','brian wilson','the vaughan brothers','joe liggins','lester davenport')

networkData <- data.frame(X1,X2)

# text recommendations
recoFunction <- function(artist_name){
mytext<-speech.rwmd[,artist_name] %>% sort(.,decreasing = T) %>% head() %>% names()

    a<-paste('n°',1,':',mytext[1])
    b<-paste('n°',2,':',mytext[2])
    c<-paste('n°',3,':',mytext[3])
    d<-paste('n°',4,':',mytext[4])
    e<-paste('n°',5,':',mytext[5])
    f<-paste('n°',6,':',mytext[6])

  return(print(c(a,b,c,d,c,e,f)))
}

